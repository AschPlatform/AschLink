{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"bignumber\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"asch-js\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"bip39\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"axios\"","webpack:///external \"validator\"","webpack:///external \"eventemitter3\"","webpack:///./src/aschFee.js","webpack:///./src/utils/index.js","webpack:///./src/constants.js","webpack:///./src/providers/index.js","webpack:///./src/providers/HttpProvider.js","webpack:///./src/utils/accounts.js","webpack:///./src/Asch.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","feeFuncMap","1","trs","2","len","args","length","3","4","5","6","7","8","9","10","11","12","100","101","102","103","200","201","202","203","204","205","300","301","302","400","401","402","403","404","convertFee","trans","type","fee","Math","pow","utils","isValidURL","url","validator","isURL","toString","protocols","isObject","obj","isArray","array","Array","isJson","string","JSON","parse","ex","isBoolean","bool","isBigNumber","number","BigNumber","constructor","isString","isFunction","isHex","isNaN","parseInt","isInteger","Number","hasProperty","hasProperties","_this","this","_len","arguments","properties","_key","map","includes","injectPromise","func","_len2","_key2","Promise","resolve","reject","apply","concat","err","res","promiseInjector","scope","_this2","_len3","_key3","mapEvent","event","block","block_number","timestamp","block_timestamp","contract","contract_address","event_name","transaction","transaction_id","result","resourceNode","resource_Node","parseEvent","_ref","abi","inputs","substr","toLowerCase","reduce","index","_abi$index","padLeft","input","padding","amount","urls","server","development","production","test","loginApi","mock","accountApi","transactionsApi","delegatesApi","myvotesApi","blocksApi","blockforgingApi","blocksDetailApi","accountdetailApi","votetomeApi","peerApi","postApi","appListApi","appInstalledApi","forgingStatusApi","myBalancesApi","issuerApi","myAssetsApi","myTransactionsApi","assetAclApi","appBalanceApi","uiaAssetApi","uiaAssetListApi","v2","accounts","transactions","councils","council","proposals","proposal","proposalVotes","deposits","currencyDeposits","myDeposits","myCurrencyDeposits","withdrawals","currencyWithdrawals","myWithdrawals","myCurrencyWithdrawals","gateways","gateValidators","gateCurrencies","gateAccountAddr","gateAccountDeposits","gateAccountWithdrawals","currencies","currency","address","balances","balance","issuers","issuer","assets","addressAssets","asset","agents","agentsSupporter","transfers","chains","chainsInstalled","blocksDetail","magics","providers","HttpProvider","host","timeout","undefined","user","password","headers","statusPage","classCallCheck_default","Error","replace","instance","axios","baseURL","auth","json","arr","str","push","join","data","method","postHeaders","k","indexOf","console","info","json2url","then","post","_ref2","put","_ref3","request","catch","aschjs","generateAccount","mnemonic","bip39","validateMnemonic","generateMnemonic","keys","crypto","getKeys","privateKey","publicKey","getAddress","Asch","aschWeb","isMainnet","AschWeb","pwd","AschJS","params","callback","blockDetail","fullNode","getTransfers","addressAsset","gatewayDelegates","signedTransaction","options","broadcastTransaction","magic","version","mnemnic","defaultMnemonic","secondSecret","log","buildAndSign","secret","aschFee","createTransactionEx","message","broadcastTransactionEx","_context2","t0","recipientId","transferXAS","_context3","_context4","secondPwd","convertSecondPwd","_context5","height","_context6","_context7","_context8","_context9","agent","_context10","_context11","_context12","delegates","_context13","_context14","desc","_context15","symbol","maximum","precision","_context16","_context17","transferAsset","_context18","tags","link","icon","category","nlockNumber","_context19","dappId","origin","_context20","_context21","_context22","_context23","recipient","wid","signatures","_context24","title","topic","content","endHeight","_context25","pid","_context26","_context27","gateway","_context28","_context29","_context30","_context31","possibleConstructorReturn_default","getPrototypeOf_default","setFullNode","defaultBlock","defaultAddress","forEach","setMnemonic","asch","assertThisInitialized_default","blockID","abs","account","setAddress","e","emit","isAddress","fromMnemonic","provider","values","some","knownProvider","isValidProvider","setStatusPage","currentProviders","isConnected","val","fromDecimal","typeof_default","fromUtf8","stringify","isFinite","hex","Buffer","from","toBigNumber","toNumber","isLessThan","fromHex","getBase58CheckAddress","code","hexStr2byteArray","toHex","byteArray2hexStr","decodeBase58Address","EventEmitter"],"mappings":"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","file":"AschWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"bignumber\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"asch-js\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"bip39\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"axios\");","module.exports = require(\"validator\");","module.exports = require(\"eventemitter3\");","\"use strict\";\n\nvar feeFuncMap = {\n  1: function (trs) {\n    return 0.1;\n  },\n  2: function (trs) {\n    var len = trs.args[0].length;\n    if (len === 2) {\n      return 200;\n    } else if (len === 3) {\n      return 100;\n    } else if (len === 4) {\n      return 80;\n    } else if (len === 5) {\n      return 40;\n    } else if (len <= 10) {\n      return 10;\n    } else {\n      return 1;\n    }\n  },\n  3: function (trs) {\n    return 5;\n  },\n  4: function (trs) {\n    return 0.1;\n  },\n  5: function (trs) {\n    return 0;\n  },\n  6: function (trs) {\n    return 5;\n  },\n  7: function (trs) {\n    return 100;\n  },\n  8: function (trs) {\n    return 0.1;\n  },\n  9: function (trs) {\n    return 0;\n  },\n  10: function (trs) {\n    return 100;\n  },\n  11: function (trs) {\n    return 0.1;\n  },\n  12: function (trs) {\n    return 0.1;\n  },\n  100: function (trs) {\n    return 100;\n  },\n  101: function (trs) {\n    return 500;\n  },\n  102: function (trs) {\n    return 0.1;\n  },\n  103: function (trs) {\n    return 0.1;\n  },\n  200: function (trs) {\n    return 100;\n  },\n  201: function (trs) {\n    return 1;\n  },\n  202: function (trs) {\n    return 1;\n  },\n  203: function (trs) {\n    return 1;\n  },\n  204: function (trs) {\n    return 0.1;\n  },\n  205: function (trs) {\n    return 0.1;\n  },\n  300: function (trs) {\n    return 10;\n  },\n  301: function (trs) {\n    return 0.1;\n  },\n  302: function (trs) {\n    return 0;\n  },\n  400: function (trs) {\n    return 0.1;\n  },\n  401: function (trs) {\n    return 100;\n  },\n  402: function (trs) {\n    return 0.01;\n  },\n  403: function (trs) {\n    return 0;\n  },\n  404: function (trs) {\n    return 0.01;\n  }\n};\n\n\nvar convertFee = function (trans) {\n  var type = trans.type;\n  var fee = feeFuncMap[type](trans);\n  fee = fee * Math.pow(10, 8);\n  trans.fee = fee;\n  return trans;\n};\nmodule.exports.convertFee = convertFee;\n","// import * as accounts from './accounts';\nimport validator from 'validator';\nimport BigNumber from 'bignumber';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url.toString(), {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node\n        };\n    },\n\n    parseEvent(event, { inputs: abi }) {\n        if(!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = '41' + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if(type == 'address')\n                    result = '41' + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while(res.length < amount)\n            res = padding + res;\n\n        return res;\n    }\n}\n\nexport default utils;\n    \n","const langsOpts = [{\n    label: '中文简体',\n    value: 'zh'\n  },\n  {\n    label: 'English',\n    value: 'en'\n  }\n]\n\nconst fees = {\n  'ETH': 150000,\n  'BCH': 1000,\n  'BTC': 10000\n}\n\nconst officialPeers = [\n  // {\n  //   ip: '107.191.41.208',\n  //   port: 80,\n  //   local: 'US1'\n  // },\n  // {\n  //   ip: '45.76.98.139',\n  //   port: 80,\n  //   local: 'JP1'\n  // },\n  // {\n  //   ip: '45.63.27.97',\n  //   port: 80,\n  //   local: 'US2'\n  // },\n  // {\n  //   ip: '45.76.99.134',\n  //   port: 80,\n  //   local: 'JP2'\n  // },\n  // {\n  //   ip: '104.238.180.37',\n  //   port: 80,\n  //   local: 'US3'\n  // },\n  // {\n  //   ip: '45.32.254.236',\n  //   port: 80,\n  //   local: 'JP3'\n  // },\n  // {\n  //   ip: '108.61.181.76',\n  //   port: 80,\n  //   local: 'JP4'\n  // },\n  // {\n  //   ip: '222.161.26.230',\n  //   port: 9999,\n  //   local: 'CN1'\n  // },\n  // {\n  //   ip: '222.161.26.231',\n  //   port: 9999,\n  //   local: 'CN2'\n  // }\n  {\n    ip: 'https://node1.asch.cn',\n    port: 80,\n    local: 'Node 1'\n  },\n  {\n    ip: 'http://node2.asch.cn',\n    port: 80,\n    local: 'Node 2'\n  },\n  {\n    ip: 'http://node3.asch.cn',\n    port: 80,\n    local: 'Node 3'\n  }\n]\n\nconst urls = {\n  server: {\n    development: 'http://testnet.asch.io',\n    // development: 'testnet1.asch.cn:80',\n    // development: 'http://47.94.37.201:4006',\n    // development: 'http://39.106.250.196:4096',\n    // development: 'http://39.106.182.193:8192'\n    // production: 'http://47.75.26.122:4096'\n    // production: 'http://192.168.1.38:4096'\n    production: 'http://testnet.asch.io',\n    test: 'http://testnet.asch.io'\n  },\n  // 登录接口\n  loginApi: {\n    mock: '/data/home/accounts.json',\n    url: '/api/accounts/open2'\n  },\n  // 余额账单Apiget /api/accounts?address=4205898691220223329L\n  accountApi: {\n    mock: '/data/home/accounts.json',\n    url: '/api/accounts'\n  },\n  // 余额账单Apiget /api/transactions\n  transactionsApi: {\n    mock: '/data/home/transactions.json',\n    url: '/api/transactions'\n  },\n  //  获取受托人接口\n  delegatesApi: {\n    mock: '/data/vote/delegates.json',\n    url: '/api/delegates'\n  },\n  //  获取我的投票列表借口\n  myvotesApi: {\n    mock: '/data/vote/delegates.json',\n    url: '/api/accounts/delegates'\n  },\n  //  获取区块数据接口\n  blocksApi: {\n    mock: '/data/blockchain/blocks.json',\n    url: '/api/blocks'\n  },\n  // 受托人的基本信息 include myself params => publicKey\n  blockforgingApi: {\n    mock: '/data/blockforging/delegates.json',\n    url: '/api/delegates/get'\n  },\n  // 详情基本信息\n  blocksDetailApi: {\n    mock: '/data/blockDetail/getblocks.json',\n    url: '/api/blocks/get'\n  },\n  // 账户基本信息\n  accountdetailApi: {\n    mock: '/data/accountdetail/accounts.json',\n    url: '/api/accounts'\n  },\n  // 谁投我的票接口\n  votetomeApi: {\n    mock: '/data/vote/voter.json',\n    url: '/api/delegates/voters'\n  },\n  // 节点列表\n  peerApi: {\n    mock: '/data/peer/peers.json',\n    url: '/api/peers'\n  },\n  postApi: {\n    mock: '/data/vote/delegates.json',\n    url: '/peer/transactions'\n  },\n  appListApi: {\n    mock: '/data/application/applist.json',\n    url: '/api/dapps'\n  },\n  appInstalledApi: {\n    mock: '/data/application/applist.json',\n    url: '/api/dapps/installed'\n  },\n  forgingStatusApi: {\n    mock: '/data/blockforging/status.json',\n    url: '/api/delegates/forging/status'\n  },\n  //  获取我的余额\n  myBalancesApi: {\n    mock: '/data/assets/my-balances.json',\n    url: '/api/uia/balances/:address'\n  },\n  //  查询发行商\n  issuerApi: {\n    mock: '/data/assets/issuer.json',\n    url: '/api/uia/issuers/:address'\n  },\n  //  获取某个发行商的资产\n  myAssetsApi: {\n    mock: '/data/assets/my-assets.json',\n    url: '/api/uia/issuers/:name/assets'\n  },\n  //  获取资产活动记录\n  myTransactionsApi: {\n    mock: '/data/assets/my-transactions.json',\n    url: '/api/uia/transactions/my/:address'\n  },\n  //  获取资产访问控制列表\n  assetAclApi: {\n    mock: '/data/assets/acl.json',\n    url: '/api/uia/assets/:name/acl/:flag'\n  },\n  //  获取应用余额\n  appBalanceApi: {\n    mock: '',\n    url: '/api/uia/balances/:address'\n  },\n  //  获取特定资产\n  uiaAssetApi: {\n    mock: '',\n    url: '/api/uia/assets/:name'\n  },\n  //  获取所有资产\n  uiaAssetListApi: {\n    mock: '',\n    url: '/api/uia/assets'\n  },\n  // ===== 1.4  v2 api ======\n  v2: {\n    // 账户查询 ps: name params is avaliable now\n    accounts: {\n      url: '/api/v2/accounts/:address'\n    },\n    // 获取交易列表\n    transactions: {\n      url: '/api/v2/transactions'\n    },\n    // 根据 tid 获取交易详情\n    transaction: {\n      url: '/api/v2/transactions/:tid'\n    },\n    // 获取理事会列表\n    councils: {\n      url: '/api/v2/groups'\n    },\n    // 根据名称获取理事会详情\n    council: {\n      url: '/api/v2/groups/:address'\n    },\n    // 获取提案列表\n    proposals: {\n      url: '/api/v2/proposals'\n    },\n    // 根据 tid 获取提案详情\n    proposal: {\n      url: '/api/v2/proposals/:tid'\n    },\n    // 根据 tid 获取提案投票情况\n    proposalVotes: {\n      url: '/api/v2/proposals/:tid/votes'\n    },\n    // 获取所有跨链充值记录\n    deposits: {\n      url: '/api/v2/gateways/deposits'\n    },\n    // 获取指定币种的跨链充值记录\n    currencyDeposits: {\n      url: '/api/v2/gateways/deposits/:currency'\n    },\n    // 获取指定地址的跨链充值记录\n    myDeposits: {\n      url: '/api/v2/gateways/deposits/my/:address'\n    },\n    // 获取指定地址指定币种的跨链充值记录\n    myCurrencyDeposits: {\n      url: '/api/v2/gateways/deposits/my/:address/:currency'\n    },\n    // 获取所有跨链提现记录\n    withdrawals: {\n      url: '/api/v2/gateways/withdrawals'\n    },\n    // 获取指定币种的跨链提现记录\n    currencyWithdrawals: {\n      url: '/api/v2/gateways/withdrawals/:currency'\n    },\n    // 获取指定地址的跨链提现记录 ?\n    myWithdrawals: {\n      url: '/api/v2/gateways/withdrawals/my/:address'\n    },\n    // 获取指定地址指定币种的跨链提现记录\n    myCurrencyWithdrawals: {\n      url: '/api/v2/gateways/withdrawals/:address/:currency'\n    },\n    // 获取所有网关\n    gateways: {\n      url: '/api/v2/gateways/'\n    },\n    // 获取指定网关的验证者\n    gateValidators: {\n      url: '/api/v2/gateways/:name/validators'\n    },\n    // 获取指定网关的支持币种\n    gateCurrencies: {\n      url: '/api/v2/gateways/:name/currencies'\n    },\n    // 获取指定用户地址的所有网关账户\n    gateAccountAddr: {\n      url: '/api/v2/gateways/:name/accounts/:address'\n    },\n    // 获取指定用户地址指定币种的所有充值记录\n    gateAccountDeposits: {\n      url: '/api/v2/gateways/deposits/:address/:currency'\n    },\n    // 获取指定用户地址指定币种的所有提现记录\n    gateAccountWithdrawals: {\n      url: '/api/v2/gateways/withdrawals/:address/:currency'\n    },\n    // 获取支持的所有跨链资产列表\n    currencies: {\n      url: '/api/v2/gateways/currencies'\n    },\n    // 获取指定名称的跨链资产详情\n    currency: {\n      url: '/api/v2/gateways/currencies/:name'\n    },\n    // 获取指定跨链币种的充值地址\n    address: {\n      url: '/api/v2/gateways/address/:sender/:currency'\n    },\n    // 获取账户余额\n    balances: {\n      url: '/api/v2/balances/:address'\n    },\n    // 获取指定币种账户余额\n    balance: {\n      url: '/api/v2/balances/:address/:currency'\n    },\n    // 获取所有发行商\n    issuers: {\n      url: '/api/v2/uia/issuers'\n    },\n    // 获取指定发行商\n    issuer: {\n      url: '/api/v2/uia/issuers/:address'\n    },\n    // 获取所有资产\n    assets: {\n      url: '/api/v2/uia/assets'\n    },\n    // 获取指定账户发行的资产\n    addressAssets: {\n      url: '/api/v2/uia/issuers/:address/assets'\n    },\n    // 获取指定资产详情\n    asset: {\n      url: '/api/v2/uia/assets/:name'\n    },\n    // 获取指定资产详情\n    agents: {\n      url: '/api/v2/agents'\n    },\n    // 获取代理人代理列表\n    agentsSupporter: {\n      url: '/api/v2/agents/:name/clienteles'\n    },\n    // 获取转账记录\n    transfers: {\n      url: '/api/v2/transfers'\n    },\n    // 获取所有已注册侧链\n    chains: {\n      url: '/api/v2/chains'\n    },\n    chainsInstalled: {\n      url: '/api/v2/chains/installed'\n    },\n    blocksApi: {\n      mock: '/data/blockchain/blocks.json',\n      url: '/api/v2/blocks'\n    },\n    blocksDetail: {\n      mock: '/data/blockchain/blocks.json',\n      url: '/api/v2/blocks/:filter'\n    }\n  },\n\n  // 区分 local 与 mainnet 的请求头参数\n  magics: {\n    development: '594fe0f3',\n    // production: '594fe0f3'\n    production: '5f5b3cf5'\n  }\n}\n\n// TODO\nconst transTypes = {\n  1: 'TRS_TYPE_TRANSFER',\n  2: 'TRS_TYPE_NICKNAME',\n  3: 'TRS_TYPE_SECOND_PASSWORD',\n  4: 'TRS_TYPE_LOCK',\n  5: 'TRS_TYPE_UNLOCK',\n  6: 'TRS_TYPE_MULTI_ACCOUNT',\n  7: 'TRS_TYPE_REGISTER_AGENT',\n  8: 'TRS_TYPE_SET_AGENT',\n  9: 'TRS_TYPE_REPEAL_AGENT',\n  10: 'TRS_TYPE_DELEGATE',\n  11: 'TRS_TYPE_VOTE',\n  12: 'TRS_TYPE_REPEAL_VOTE',\n\n  100: 'TRS_TYPE_UIA_ISSUER',\n  101: 'TRS_TYPE_UIA_ASSET',\n  102: 'TRS_TYPE_UIA_ISSUE',\n  103: 'TRS_TYPE_UIA_TRANSFER',\n  200: 'TRS_TYPE_DAPP',\n  201: 'TRS_TYPE_UPDATE_DAPP_DELEGATE',\n  202: 'TRS_TYPE_ADD_DAPP_DELEGATE',\n  203: 'TRS_TYPE_DEL_DAPP_DELEGATE',\n  204: 'TRS_TYPE_DEPOSIT',\n  205: 'TRS_TYPE_WITHDRAWAL',\n\n  300: 'TRS_TYPE_LAUNCH_PROPOSAL',\n  301: 'TRS_TYPE_VOTE_PROPOSAL',\n  302: 'TRS_TYPE_ACTIVATE_PROPOSAL',\n\n  400: 'TRS_TYPE_OPEN_GATEWAY_ACCOUNT',\n  401: 'TRS_TYPE_REGISTER_GATEWAY',\n  402: 'TRS_TYPE_GATEWAY_DEPOSIT',\n  403: 'TRS_TYPE_GATEWAY_WITHDRAW',\n  404: 'TRS_TYPE_GATEWAY_WITHDRAW_CONFIRM',\n  405: 'TRS_TYPE_GATEWAY_WITHDRAW_SIGNATURE',\n  406: 'TRS_TYPE_GATEWAY_WITHDRAW_TRANSACTION',\n\n  500: 'TRS_TYPE_GROUP_VOTE',\n  501: 'TRS_TYPE_GROUP_ACTIVE',\n  502: 'TRS_TYPE_GROUP_ADDMEMBER',\n  503: 'TRS_TYPE_GROUP_REMOVEMEMBER',\n  504: 'TRS_TYPE_GROUP_REPLACEMEMBER'\n}\n\nexport {\n  urls,\n  langsOpts,\n  transTypes,\n  officialPeers,\n  fees\n}\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import axios from 'axios';\nimport utils from '../utils';\nimport { urls } from  '../constants'\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if (!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if (!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    json2url(json){\n        var arr = []\n        var str = ''\n        for (var i in json) {\n            str = i + '=' + json[i]\n            arr.push(str)\n        }\n        return arr.join('&')\n    }\n\n    request(url, data={}, method='get', postHeaders){\n        for (let k in data) {\n            if (url.indexOf(':' + k) !== -1) {\n                url = url.replace(':' + k, data[k])\n                delete data[k]\n            }\n        }\n        console.info('path:' + url)\n        method = method.toLowerCase()\n        // var res;\n        if (method === 'get') {\n            return this.instance.get(url + '?' + this.json2url(data)).then(({\n                data\n            }) => data);\n        } else if (method === 'post') {\n            return this.instance.post(url, data, postHeaders).then(({\n                data\n            }) => data);\n        } else if (method === 'put') {\n            return this.instance.put(url, data, postHeaders).then(({\n                data\n            }) => data);\n        }\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n};\n","var aschjs = require('asch-js');\nimport bip39 from 'bip39'\n\n\nfunction generateMnemonic() {\n    return bip39.generateMnemonic(128);\n}\n\n\nexport default function generateAccount(mnemonic=false) {\n    if(!mnemonic || !bip39.validateMnemonic(mnemonic))\n        mnemonic = generateMnemonic();\n    const keys =  aschjs.crypto.getKeys(mnemonic);\n    const privateKey = keys.privateKey;\n    const publicKey = keys.publicKey;\n    const address = aschjs.crypto.getAddress(publicKey);\n\n    return {\n        mnemonic:mnemonic,\n        privateKey: privateKey,\n        publicKey: publicKey,\n        address: address\n    }\n}\n","import AschWeb from '.';\nimport utils from './utils';\nimport aschFee from './aschFee'\nimport AschJS from 'asch-js';\nimport {\n    urls\n} from './constants'\n// import {\n//     url\n// } from 'inspector';\n\nexport default class Asch {\n    constructor(aschWeb = false, isMainnet = false) {\n        if (!aschWeb || !aschWeb instanceof AschWeb)\n            throw new Error('Expected instance of AschWeb');\n\n        this.aschWeb = aschWeb;\n        this.isMainnet = isMainnet;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    // parseToken(token) {\n    //     return {\n    //         ...token,\n    //         name: this.aschWeb.toUtf8(token.name),\n    //         abbr: token.abbr && this.aschWeb.toUtf8(token.abbr),\n    //         description: token.description && this.aschWeb.toUtf8(token.description),\n    //         url: token.url && this.aschWeb.toUtf8(token.url)\n    //     };\n    // }\n\n    convertSecondPwd(pwd) {\n        const key = pwd\n        const keyPair = AschJS.crypto.getKeys(key)\n        return keyPair.publicKey\n    }\n    //  区块详情\n    blockDetail(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.blockDetail, params);\n\n        this.aschWeb.fullNode.request(urls.v2.blocksDetail, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('Block not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 账户查询\n    accounts(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.accounts, params);\n\n        this.aschWeb.fullNode.request(urls.v2.accounts.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取交易列表\n    transactions(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.transactions, params);\n\n        this.aschWeb.fullNode.request(urls.v2.transactions.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 根据 tid 获取交易详情\n    transaction(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.transaction, params);\n\n        this.aschWeb.fullNode.request(urls.v2.transaction.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取理事会列表\n    councils(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.councils, params);\n\n        this.aschWeb.fullNode.request(urls.v2.councils.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 根据名称获取理事会详情\n    council(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.council, params);\n\n        this.aschWeb.fullNode.request(urls.v2.council.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取提案列表\n    proposals(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.proposals, params);\n\n        this.aschWeb.fullNode.request(urls.v2.proposals.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 根据 tid 获取提案详情\n    proposal(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.proposal, params);\n\n        this.aschWeb.fullNode.request(urls.v2.proposal.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 根据 tid 获取提案投票情况\n    proposalVotes(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.proposalVotes, params);\n\n        this.aschWeb.fullNode.request(urls.v2.proposalVotes.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取所有跨链充值记录\n    deposits(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.deposits, params);\n\n        this.aschWeb.fullNode.request(urls.v2.deposits.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定币种的跨链充值记录\n    currencyDeposits(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.currencyDeposits, params);\n\n        this.aschWeb.fullNode.request(urls.v2.currencyDeposits.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定地址的跨链充值记录\n    myDeposits(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.myDeposits, params);\n\n        this.aschWeb.fullNode.request(urls.v2.myDeposits.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取指定网关和账户的信息\n    gateAccountAddr(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.gateAccountAddr, params);\n\n        this.aschWeb.fullNode.request(urls.v2.gateAccountAddr.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定地址指定币种的跨链充值记录 +\n    myCurrencyDeposits(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.myCurrencyDeposits, params);\n\n        this.aschWeb.fullNode.request(urls.v2.gateAccountDeposits.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取所有跨链提现记录\n    withdrawals(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.withdrawals, params);\n\n        this.aschWeb.fullNode.request(urls.v2.withdrawals.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定币种的跨链提现记录\n    currencyWithdrawals(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.currencyWithdrawals, params);\n\n        this.aschWeb.fullNode.request(urls.v2.currencyWithdrawals, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定地址的跨链提现记录\n    myWithdrawals(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.myWithdrawals, params);\n\n        this.aschWeb.fullNode.request(urls.v2.myWithdrawals.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定地址指定币种的跨链提现记录 +\n    myCurrencyWithdrawals(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.myCurrencyWithdrawals, params);\n\n        this.aschWeb.fullNode.request(urls.v2.gateAccountWithdrawals, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取支持的所有跨链资产列表\n    currencies(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.currencies, params);\n\n        this.aschWeb.fullNode.request(urls.v2.currencies.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定名称的跨链资产详情\n    currency(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.currency, params);\n\n        this.aschWeb.fullNode.request(urls.v2.currency, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取指定跨链币种的充值地址\n    address(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.address, params);\n\n        this.aschWeb.fullNode.request(urls.v2.address.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取账户余额\n    balances(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.balances, params);\n\n        this.aschWeb.fullNode.request(urls.v2.balances, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取指定币种账户余额\n    balance(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.balance, params);\n\n        this.aschWeb.fullNode.request(urls.v2.balance.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取所有发行商\n    issuers(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.issuers, params);\n\n        this.aschWeb.fullNode.request(urls.v2.issuer.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取指定发行商\n    issuer(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.issuer, params);\n\n        this.aschWeb.fullNode.request(urls.v2.issuer.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取用户发行资产\n    addressAssets(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.addressAssets, params);\n\n        this.aschWeb.fullNode.request(urls.v2.addressAssets.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n    // 获取所有资产\n    issuer(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.issuer, params);\n\n        this.aschWeb.fullNode.request(urls.v2.issuer.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取代理人委托人列表\n    agentsSupporter(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.agentsSupporter, params);\n\n        this.aschWeb.fullNode.request(urls.v2.agentsSupporter.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取转账记录\n    getTransfers(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTransfers, params);\n\n        this.aschWeb.fullNode.request(urls.v2.transfers.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取指定账户发行的资产\n    addressAsset(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.addressAsset, params);\n\n        this.aschWeb.fullNode.request(urls.v2.addressAsset.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取所有网关\n    gateways(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.gateways, params);\n\n        this.aschWeb.fullNode.request(urls.v2.gateways.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取某网关所有候选人\n    gatewayDelegates(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.gatewayDelegates, params);\n\n        this.aschWeb.fullNode.request(urls.v2.gateValidators.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取所有已注册侧链\n    chains(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.chains, params);\n\n        this.aschWeb.fullNode.request(urls.v2.chains.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    // 获取所有已注册侧链\n    chainsInstalled(params, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.chainsInstalled, params);\n\n        this.aschWeb.fullNode.request(urls.v2.chainsInstalled.url, params, 'get').then(res => {\n            if (!Object.keys(res).length)\n                return callback('account not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n    /*++++++++++++++++++*/\n    // 广播交易\n    broadcastTransaction(signedTransaction, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.broadcastTransaction, signedTransaction, options);\n\n        this.aschWeb.fullNode.request(urls.postApi.url, {\n            transaction: signedTransaction\n        }, 'post', {\n            headers: {\n                magic: this.isMainnet ? urls.magics.production : urls.magics.development,\n                version: ''\n            }\n        }).then(res => {\n            if (!Object.keys(res).length)\n                return callback('response not found');\n            callback(null, res);\n        }).catch(err => callback(err));\n    }\n\n\n    //签名并创建交易\n\n    async buildAndSign(transaction = false, mnemnic = this.aschWeb.defaultMnemonic, secondSecret = false, callback = false) {\n        console.log('mnemnic:', mnemnic);\n        if (!callback)\n            return this.injectPromise(this.buildAndSign, transaction, mnemnic, secondSecret);\n        transaction.secret = mnemnic;\n        transaction.secondSecret = secondSecret ? secondSecret : null;\n        transaction = aschFee.convertFee(transaction);\n        transaction = AschJS.transaction.createTransactionEx(transaction);\n        //console.log('transaction:',transaction);\n        if (transaction) {\n            return callback(null, transaction);\n        } else {\n            return callback('buildAndSign failed.');\n        }\n    }\n\n    async broadcastTransactionEx(type, args, message, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.broadcastTransactionEx, type, args, message, options = {});\n        try {\n            const transaction = {\n                type: type, //转账的合约编号是\n                args: args, //合约所需要参数\n                message: message //做一些备注（非必需）\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            console.log('result:', result);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n\n    // 转账 XAS  TODO\n    async transferXAS(amount, recipientId, message, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.transferXAS, amount, recipientId, message, options = {});\n        try {\n            const transaction = {\n                type: 1,\n                args: [amount, recipientId],\n                message\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            console.log('result:', result);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 设置昵称\n    async setName(name, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 2,\n                args: [name]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 设置二级密码\n    async setsecondPassword(secondPwd, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 3,\n                args: [convertSecondPwd(secondPwd)]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 锁仓\n    async setLock(height, amount, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 4,\n                args: [height, amount]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 解锁\n    async unlock(options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 5,\n                args: []\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 设置多签账户\n    async setMultiAccount(options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 6,\n                args: []\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 注册为代理人\n    async registerAgent(options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 7,\n                args: []\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 设置投票代理人\n    async setAgent(agent, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 8,\n                args: [agent]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 取消投票代理\n    async repealAgent(options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 9,\n                args: []\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 注册为受托人\n    async registerDelegate(options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 10,\n                args: []\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 受托人投票\n    async voteDelegate(delegates, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 11,\n                args: [delegates]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    // 撤销受托人投票\n    async cleanVote(delegates, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 12,\n                args: [delegates]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    // 注册发行商 TODO\n    async registerIssuer(name, desc, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 100,\n                args: [name, desc]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 注册资产 TODO\n    async registerAsset(symbol, desc, maximum, precision, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 101,\n                args: [symbol, desc, maximum, precision]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 发行资产\n    async issueAsset(symbol, amount, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 102,\n                args: [symbol, amount]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 资产转账\n    async transferAsset(symbol, amount, recipientId, message, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.transferAsset, symbol, amount, recipientId, message, options = {});\n        try {\n            const transaction = {\n                type: 103,\n                args: [symbol, amount, recipientId],\n                message\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 注册 dapp\n    async registerDapp(\n        name,\n        desc,\n        tags,\n        link,\n        icon,\n        category,\n        delegates,\n        nlockNumber,\n        options = {}, callback = false\n    ) {\n        try {\n            const transaction = {\n                type: 200,\n                args: [name, desc, tags, link, icon, category, delegates, nlockNumber]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 更新 dapp 记账人\n    async updateBooker(dappId, origin, key, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 201,\n                args: [dappId, origin, key]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 添加 dapp 记账人\n    async addBooker(dappId, key, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 202,\n                args: [dappId, key]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 删除 dapp 记账人\n    async deleteBooker(dappId, key, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 203,\n                args: [dappId, key]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // dapp 充值\n    async depositDapp(name, currency, amount, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 204,\n                args: [name, currency, amount]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // dapp 提现 TODO  参数问题\n    async withdrawDapp(dappId, recipient, amount, wid, signatures, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 205,\n                args: [dappId, recipient, amount, wid, signatures],\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 发起提案\n    async createProposal(title, desc, topic, content, endHeight, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 300,\n                args: [title, desc, topic, content, endHeight]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 对提案投票\n    async voteProposal(pid, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 301,\n                args: [pid]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 激活提案\n    async activateProposal(pid, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 302,\n                args: [pid]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 网关注册候选人\n    async registerGateway(gateway, publicKey, desc, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 401,\n                args: [gateway, publicKey, desc]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 网关开户\n    async openGatewayAccount(gateway, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 400,\n                args: [gateway]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 网关充值\n    async depositGateway(address, currency, amount, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 402,\n                args: [address, currency, amount]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n    // 网关提现\n    async withdrawGateway(address, gateway, currency, amount, fee, options = {}, callback = false) {\n        try {\n            const transaction = {\n                type: 403,\n                args: [address, gateway, currency, amount, fee]\n            };\n            const signedTransaction = await this.buildAndSign(transaction);\n            const result = await this.broadcastTransaction(signedTransaction);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n};\n","import providers  from './providers';\nimport utils  from './utils';\nimport generateAccount from './utils/accounts'\nimport BigNumber from 'bignumber';\nimport EventEmitter from 'eventemitter3';\nimport Asch from './Asch';\nimport AschJS from 'asch-js';\n\nexport default class AschWeb extends EventEmitter {\n     static providers = providers;\n     static BigNumber = BigNumber;\n\n    constructor(fullNode, mnemonic = false, isMainnet = false) {\n        super();\n\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        this.setFullNode(fullNode);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultMnemonic = false;\n        this.defaultAddress = false;\n\n        [\n            'toHex',\n            'fromHex',\n            'toUtf8',\n            'fromUtf8',\n            'toDecimal',\n            'fromDecimal',\n            'toBigNumber',\n            'isAddress',\n            'createAccount',\n            'address'\n        ].forEach(key => {\n            this[key] = AschWeb[key];\n        });\n\n        if (mnemonic)\n            this.setMnemonic(mnemonic);\n\n        this.asch = new Asch(this, isMainnet);\n        this.utils = utils;\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if (!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setMnemonic(mnemonic) {\n        try {\n            const account = generateAccount(mnemonic);\n            this.setAddress(account.address);\n        } catch(e) {\n            console.log('setMnemonic catch: ',e);\n            throw new Error('Invalid mnemonic key provided');\n        }\n\n        this.defaultMnemonic = mnemonic;\n        this.emit('mnemonicChanged', mnemonic);\n    }\n\n    setAddress(address) {\n        if (!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        if (this.defaultMnemonic && this.address.fromMnemonic(this.defaultMnemonic) !== address)\n            this.defaultMnemonic = false;\n\n        this.defaultAddress = address;\n\n        this.emit('addressChanged', {\n            address\n        });\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if (!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if (utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, '41');\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromMnemonic(mnemonic) {\n                try {\n                    return generateAccount(mnemonic).address;\n                } catch(e) {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static toHex(val) {\n        if (utils.isBoolean(val))\n            return AschWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val))\n            return AschWeb.fromDecimal(val);\n\n        if (typeof val === 'object')\n            return AschWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if (!isFinite(val))\n                return AschWeb.fromUtf8(val);\n        }\n\n        return AschWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        hex = hex.replace(/^0x/, '');\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toDecimal(value) {\n        return AschWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = AschWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static toBigNumber(amount = 0) {\n        if (utils.isBigNumber(amount))\n            return amount;\n\n        if (utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if (!utils.isString(address))\n            return false;\n        return AschJS.crypto.isAddress(address);\n    }\n\n    static async createAccount(callback = false) {\n        const account = generateAccount();\n\n        if (callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected()\n        });\n    }\n};\n"],"sourceRoot":""}